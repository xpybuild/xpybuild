name: Doc-Release

on:
  # When a new (empty) release is created via the GitHub UI, uploads the files to that release
  # and upload the doc to GitHub pages. Only do this when all the tests are passing. 
  release:
    types:
      - created

  # Also, on every commit to the main branch, build the HTML documentation using Sphinx to make sure it's not broken
  push:
    branches: [ main, release ]
  
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"
      - name: Cache Python deps (get location)
        id: pip-cache
        run: |
            python -m pip install -U "pip>=20.1"
            echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache Python deps
        uses: actions/cache@v4
        with:
            path: ${{ steps.pip-cache.outputs.dir }}
            key: generate-doc-pip

      - name: Python dependencies - install
        id: deps
        run: |
          # Peg these versions so we only upgrade when we want to
          pip install -r docs/sphinx-requirements.txt

      - name: Build
        shell: bash
        run: |
          python xpybuild.py --buildfile release-xpy.xpybuild.py
         
      - name: Upload doc as an artifact
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: _build_output/docs/html/*

      - name: Upload to gh-pages
        if: github.event_name == 'release'
        uses: JamesIves/github-pages-deploy-action@830e6a4f7c81743c52f3fed0ac67428feff9620a # 2022-02 4.2.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: _build_output/docs/html

      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2 # 2020-12 v2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          file: _build_output/*.zip
